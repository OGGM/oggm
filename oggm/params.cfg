# Configuration file for OGGM parameters

### Input/Output paths. Set to ~ for defaults

# Where OGGM will write its output
working_dir = ~

# Input directory for topography data. It can be emtpy: in that case OGGM will
# download the data from the SRTM (open) and ASTER (not open) databases
topo_dir = ~

# Users can specify their own topography file if they want to. In this case,
# the topo_dir above will be ignored. This is useful for testing, or if you
# are simulating a single region with better data.
dem_file = ~

# Input directory for CRU TS data. It can be emtpy: in that case OGGM will
# download the data from https://crudata.uea.ac.uk/cru/data/hrg/cru_ts_3.23/
cru_dir = ~

# Input directory for RGI data. It can be emtpy: in that case OGGM will
# download the data
rgi_dir = ~

# Users can specify their own climate dataset if they want to. In this case,
# the cru_dir above will be ignored. This is useful for testing, or if you
# are simulating a single region with better data.
# The format of the file is not (yet) very flexible. See the HISTALP data
# in the sample-data folder for an example:
# https://github.com/OGGM/oggm-sample-data/tree/master/test-workflow
climate_file = ~

# Path to a .csv file containing links between the RGI and the WGMS
# Note that the MB data ships with OGGM, so that keeping this parameter to
# the default "~" is what most users should do
wgms_rgi_links = ~

# Path to a .csv file containing links between the RGI and the GlaThiDa
# Note that the GlaThiDa data ships with OGGM, so that keeping this parameter
# to the default "~" is what most users should do
glathida_rgi_links = ~

# Path to a .csv file containing links between the RGI and the Leclercq data
# Note that the Leclercq data ships with OGGM, so that keeping this parameter
# to the default "~" is what most users should do
leclercq_rgi_links = ~

# Run period. Set to 0, 0 for the default (the entire available data space)
# Note that this will also have an influence on the mb data available for
# calibration!
run_period = 0, 0

# Consider the glacier divides?
use_divides = True

# Multiprocessing
use_multiprocessing = True
# Number of processors to use (-1 = all available)
mp_processes = -1

# Continue on error?
continue_on_error = False

# Use compression for the intermediate pickles? (might slow down I/O a bit)
# Both the performance loss (0% ?) and the space gain (-10%) seem to be low
use_compression = True

# MPI recv buffer size
# If you receive "Message truncated" errors from MPI, increase this
mpi_recv_buf_size = 131072

### CENTERLINE determination

# Decision on grid spatial resolution for each glacier
grid_dx_method = 'linear'
# 'linear':  dx (meters) = d1 * AREA (km) + d2 ; clipped to dmax (e.g.: 5, 10, 200)
# 'square':  dx (meters) = d1 * sqrt(AREA) (km) + d2 ;  clipped to dmax (e.g.: 20, 10, 200)
d1 = 5.
d2 = 10.
dmax = 100.

# Which algorithm to use for interpolating the topography to the local grid
# 'bilinear' or 'cubic'
topo_interp = cubic

# Grid border buffer around the glacier (in pixels)
# Make it large if you want to do past simulations.
border = 20

# Head determination: (approx) size in meters of the half-size window
# where to look for maximas
localmax_window = 500.

# DEM smoothing: (approx) size in meters of the smoothing window.
# Set to 0 for no smoothing
smooth_window = 251.

# Use multiple flowlines?
use_multiple_flowlines = True

# Kienholz et al eq (1)
q1 = 2e-6
q2 = 500.
rmax = 1000.

# Kienholz et al eq (2)
f1 = 1000.
f2 = 3000.
a = 4.25
b = 3.7

# Kienholz et al eq (8) but modified here
# Buffer in pixels where to cut the incoming centerlines
kbuffer = 2.5

# For water-terminating glaciers, use the percentile instead of minimum h?
# Set to zero if no special treatment for water terminating glaciers should be
# used, and to an integer > 0 to specify the percentile
terminus_search_percentile = 10
terminus_search_altitude_range = 100

### FLOWLINES definition parameters
# Grid spacing of a flowline in pixel coordinates
flowline_dx = 2
# Number of pixels to arbitrarily remove at junctions
flowline_junction_pix = 3
# Gaussian smooth of the altitude along a flowline
# sigma, in pixel coordinates (sigma=1 -> smooth around a -4:+4 window)
flowline_height_smooth = 1

### CATCHMENT WIDTHS computation parameters
# altitude range threshold for filtering
# This stuff has not been really optimized, it's also not very critical
width_alt_range_thres = 250.
# Minimum number of elements per bin for altitude-binsize definition
min_n_per_bin = 2
# Baseline binsize for the altitude-area distribution
base_binsize = 50.

### CLIMATE params
# specify here the start and end year where oggm will searh for tstar
# candidates (note that the window will be reduced by mu_star_halfperiod on
# each side of the window). Set to 0, 0 for the default (the entire available
# data space)
tstar_search_window = 0, 0
mu_star_halfperiod = 15
# TODO: this should be set to true by default
use_bias_for_run = False
# which temperature gradient? if false, use temp_default_gradient. If true,
# compute one by linear regression of the 9 surrounding grid points
temp_use_local_gradient = False
temp_default_gradient = -0.0065
# the linear regression can lead to quite astonishing results... this helps
# you to crop them to more realistic values:
temp_local_gradient_bounds = -0.009, -0.003
# less important parameters
temp_all_solid = 0.
temp_all_liq = 2.
temp_melt = 0.
# precipitation correction:
#   - set to a float for a constant scaling factor
#   - set to 'stddev' for a unique factor computed to minimize the
#     bias in inter-annual standard deviation for all reference glaciers
#     (recommended)
#   - set to 'stddev_perglacier' for a factor computed to minimize the
#     bias in inter-annual standard deviation for each glacier independantly
#     (the scaling factor is then interpolated for glaciers without mb data)
prcp_scaling_factor = 2.5

### INVERSION params
# sometimes the width is small and the flux is big. crop this too
max_thick_to_width_ratio = 0.5
# the initial bed shape parameter depends on the width of the glacier.
# The ratio presented above is useful for widths > 500 m, but for smaller
# widths the bed shape can also be problematically high. Let's avoid this:
max_shape_param = 0.004
# sigma of the smoothing window after inversion
section_smoothing = 1.
# Clip the slope, in degrees
min_slope = 2.
# Do you want to consider sliding when inverting?
invert_with_sliding = False
# Do you want to optimize thickness or volume RMSD?
optimize_thick = False
# Do you actually want to optimize the parameters at all?
optimize_inversion_params = True
# If false, tell OGGM which should be used
inversion_glen_a = 2.4e-24
inversion_fs = 0.

### FLOWLINE MODEL params
# Which kind of bed shape? (parabolic, trapezoid, mixed)
bed_shape = 'mixed'
mixed_min_shape = 0.0012
trapezoid_lambdas = 0.2
# Which period you want to run?
y0 = 1990
y1 = 2003

# Which flowline params?
# Set to True to use the params obtained from the inversion.
use_optimized_inversion_params = True
flowline_glen_a = 2.4e-24
flowline_fs = 0.

# Oerlemans'
# flowline_fs = 5.7e-20
# flowline_fd = 1.9e-24

# Alex's
# flowline_fs = 0.
# flowline_fd = 2.4e-24
